import "pkg:/source/enums/ColorPalette.bs"
import "pkg:/source/enums/KeyCode.bs"
import "pkg:/source/utils/misc.bs"

sub init()
    m.top.backgroundColor = ColorPalette.VIEWBACKGROUND
    m.top.backgroundURI = ""

    m.spinner = m.top.findNode("spinner")
end sub

' Triggered when the isLoading boolean component field is changed
sub isLoadingChanged()
    m.spinner.visible = m.top.isLoading
end sub

sub onJumpToChange()
    if not isValidAndNotEmpty(m.top.jumpTo) then return
    if not isValid(m.top.jumpTo.selectiontype) then return

    m.global.jumpTo = m.top.jumpTo
    m.top.jumpTo = {}
end sub

' Triggered when the disableRemote boolean component field is changed
sub disableRemoteChanged()
    if m.top.disableRemote
        dialog = createObject("roSGNode", "ProgressDialog")
        dialog.id = "invisibiledialog"
        dialog.visible = false
        dialog.opacity = 0
        m.top.dialog = dialog
    else
        if isValid(m.top.dialog)
            m.top.dialog.close = true
        end if
    end if
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    if not press then return false

    if key = "back"
        m.global.sceneManager.callFunc("popScene")
        return true
    end if

    if key = KeyCode.REPLAY
        focusAudioMiniPlayer()
        return true
    end if

    if key = KeyCode.LEFT
        sidebar = m.top.findNode("sidebar")
        if isValid(sidebar) and sidebar.isOpen = false

            focusNode = m.top.getScene()
            depth = 0
            while depth < 50
                nextNode = focusNode.focusedChild
                if not isValid(nextNode) then exit while
                focusNode = nextNode
                depth = depth + 1
            end while
            sidebar.previousFocus = focusNode
            sidebar.isOpen = true
            sidebar.findNode("menu").setFocus(true)

            return true
        end if
    end if

    return false
end function

