import "pkg:/source/enums/ColorPalette.bs"

sub init()
    m.buttonBackground = m.top.findNode("buttonBackground")
    m.buttonIcon = m.top.findNode("buttonIcon")
    m.buttonText = m.top.findNode("buttonText")
end sub

sub itemContentChanged()
    itemData = m.top.itemContent

    m.buttonText.color = ColorPalette.WHITE
    m.buttonText.font.size = itemData.fontSize
    m.buttonBackground.blendColor = ColorPalette.TRANSPARENT
    m.buttonIcon.uri = itemData.icon
    m.buttonIcon.blendcolor = ColorPalette.WHITE
    m.buttonText.text = itemData.text
    m.buttonBackground.height = itemData.height
    m.buttonBackground.width = itemData.width

    m.focusTextColor = ColorPalette.BLACK
    m.textColor = ColorPalette.WHITE
    m.focusBackground = ColorPalette.WHITE
    m.focusIcon = itemData.focusIcon
    m.icon = itemData.icon
    m.background = ColorPalette.TRANSPARENT
    m.height = itemData.height
    m.width = itemData.width
    m.padding = itemData.padding
    m.iconSide = itemData.iconSide

    m.fontr = CreateObject("roSGNode", "Font")
    m.fontr.uri = "pkg:/images/fonts/NotoSans-Regular.ttf"
    m.fontr.size = 32
    m.buttonText.font = m.fontr


    setIconSize()

    m.top.focus = itemData.focus
    onFocusChanged()
end sub


sub onFocusChanged()
    if m.top.focus
        m.buttonText.color = m.focusTextColor
        m.buttonBackground.blendColor = m.focusBackground
        m.buttonIcon.blendcolor = ColorPalette.BLACK
        m.buttonIcon.uri = m.focusIcon <> "" ? m.focusIcon : m.icon
    else
        m.buttonText.color = m.textColor
        m.buttonIcon.uri = m.icon
        m.buttonIcon.blendcolor = ColorPalette.WHITE
        m.buttonBackground.blendColor = m.background
    end if
end sub

sub setIconSize()
    height = m.buttonBackground.height
    width = m.buttonBackground.width

    if height > 0 and width > 0
        ' Set icon height and width
        iconSize = m.height
        if m.padding > 0
            iconSize = iconSize - m.padding
        end if
        m.buttonIcon.height = iconSize
        m.buttonIcon.width = iconSize

        ' Set icon position
        if LCase(m.iconSide) = "right"
            m.buttonIcon.translation = [width - m.padding - iconSize, (height - iconSize) / 2]
            m.buttonText.translation = [m.padding, 0]
        else
            m.buttonIcon.translation = [m.padding, (height - iconSize) / 2]
            m.buttonText.translation = [m.padding + iconSize + 20, 0]
        end if

        ' Set text layout
        m.buttonText.height = height
        m.buttonText.maxWidth = width - m.padding - iconSize - 40
    end if
end sub


function onKeyEvent(key as string, press as boolean) as boolean
    if not press then return false

    if key = "right" and m.top.focus
        m.top.escape = "right"
    end if

    if key = "left" and m.top.focus
        m.top.escape = "left"
    end if

    return false
end function
